"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[59719],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,h=u["".concat(p,".").concat(m)]||u[m]||c[m]||o;return n?r.createElement(h,i(i({ref:t},d),{},{components:n})):r.createElement(h,i({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},59258:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const o={title:"ai-content-moderation",keywords:["Apache APISIX","API Gateway","Plugin","ai-content-moderation"],description:"This document contains information about the Apache APISIX ai-content-moderation Plugin."},i=void 0,l={unversionedId:"plugins/ai-content-moderation",id:"plugins/ai-content-moderation",isDocsHomePage:!1,title:"ai-content-moderation",description:"This document contains information about the Apache APISIX ai-content-moderation Plugin.",source:"@site/docs/apisix/plugins/ai-content-moderation.md",sourceDirName:"plugins",slug:"/plugins/ai-content-moderation",permalink:"/zh/docs/apisix/next/plugins/ai-content-moderation",editUrl:"/zh/edit#https://github.com/apache/apisix/edit/master/docs/zh/latest/plugins/ai-content-moderation.md",tags:[],version:"current",frontMatter:{title:"ai-content-moderation",keywords:["Apache APISIX","API Gateway","Plugin","ai-content-moderation"],description:"This document contains information about the Apache APISIX ai-content-moderation Plugin."},sidebar:"docs",previous:{title:"ocsp-stapling",permalink:"/zh/docs/apisix/next/plugins/ocsp-stapling"},next:{title:"ai-prompt-decorator",permalink:"/zh/docs/apisix/next/plugins/ai-prompt-decorator"}},p=[{value:"Description",id:"description",children:[]},{value:"Plugin Attributes",id:"plugin-attributes",children:[]},{value:"Example usage",id:"example-usage",children:[]}],s={toc:p};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ai-content-moderation")," plugin processes the request body to check for toxicity and rejects the request if it exceeds the configured threshold."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"This plugin must be used in routes that proxy requests to LLMs only."))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"As of now, the plugin only supports the integration with ",(0,a.kt)("a",{parentName:"em",href:"https://aws.amazon.com/comprehend/"},"AWS Comprehend")," for content moderation. PRs for introducing support for other service providers are welcomed."))),(0,a.kt)("h2",{id:"plugin-attributes"},"Plugin Attributes"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"th"},"Field")),(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"th"},"Required")),(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"th"},"Type")),(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"th"},"Description")))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"provider.aws_comprehend.access_key_id"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes"),(0,a.kt)("td",{parentName:"tr",align:null},"String"),(0,a.kt)("td",{parentName:"tr",align:null},"AWS access key ID")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"provider.aws_comprehend.secret_access_key"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes"),(0,a.kt)("td",{parentName:"tr",align:null},"String"),(0,a.kt)("td",{parentName:"tr",align:null},"AWS secret access key")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"provider.aws_comprehend.region"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes"),(0,a.kt)("td",{parentName:"tr",align:null},"String"),(0,a.kt)("td",{parentName:"tr",align:null},"AWS region")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"provider.aws_comprehend.endpoint"),(0,a.kt)("td",{parentName:"tr",align:null},"No"),(0,a.kt)("td",{parentName:"tr",align:null},"String"),(0,a.kt)("td",{parentName:"tr",align:null},"AWS Comprehend service endpoint. Must match the pattern ",(0,a.kt)("inlineCode",{parentName:"td"},"^https?://"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"moderation_categories"),(0,a.kt)("td",{parentName:"tr",align:null},"No"),(0,a.kt)("td",{parentName:"tr",align:null},"Object"),(0,a.kt)("td",{parentName:"tr",align:null},"Key-value pairs of moderation category and their score. In each pair, the key should be one of the ",(0,a.kt)("inlineCode",{parentName:"td"},"PROFANITY"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"HATE_SPEECH"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"INSULT"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"HARASSMENT_OR_ABUSE"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"SEXUAL"),", or ",(0,a.kt)("inlineCode",{parentName:"td"},"VIOLENCE_OR_THREAT"),"; and the value should be between 0 and 1 (inclusive).")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"moderation_threshold"),(0,a.kt)("td",{parentName:"tr",align:null},"No"),(0,a.kt)("td",{parentName:"tr",align:null},"Number"),(0,a.kt)("td",{parentName:"tr",align:null},"The degree to which content is harmful, offensive, or inappropriate. A higher value indicates more toxic content allowed. Range: 0 - 1. Default: 0.5")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"llm_provider"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes"),(0,a.kt)("td",{parentName:"tr",align:null},"String"),(0,a.kt)("td",{parentName:"tr",align:null},"Name of the LLM provider that this route will proxy requests to.")))),(0,a.kt)("h2",{id:"example-usage"},"Example usage"),(0,a.kt)("p",null,"First initialise these shell variables:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"ADMIN_API_KEY=edd1c9f034335f136f87ad84b625c8f1\nACCESS_KEY_ID=aws-comprehend-access-key-id-here\nSECRET_ACCESS_KEY=aws-comprehend-secret-access-key-here\nOPENAI_KEY=open-ai-key-here\n")),(0,a.kt)("p",null,"Create a route with the ",(0,a.kt)("inlineCode",{parentName:"p"},"ai-content-moderation")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"ai-proxy")," plugin like so:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes/1" -X PUT \\\n  -H "X-API-KEY: ${ADMIN_API_KEY}" \\\n  -d \'{\n    "uri": "/post",\n    "plugins": {\n      "ai-content-moderation": {\n        "provider": {\n          "aws_comprehend": {\n            "access_key_id": "\'"$ACCESS_KEY_ID"\'",\n            "secret_access_key": "\'"$SECRET_ACCESS_KEY"\'",\n            "region": "us-east-1"\n          }\n        },\n        "moderation_categories": {\n          "PROFANITY": 0.5\n        },\n        "llm_provider": "openai"\n      },\n      "ai-proxy": {\n        "auth": {\n          "header": {\n            "api-key": "\'"$OPENAI_KEY"\'"\n          }\n        },\n        "model": {\n          "provider": "openai",\n          "name": "gpt-4",\n          "options": {\n            "max_tokens": 512,\n            "temperature": 1.0\n          }\n        }\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org:80": 1\n      }\n    }\n  }\'\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ai-proxy")," plugin is used here as it simplifies access to LLMs. However, you may configure the LLM in the upstream configuration as well."),(0,a.kt)("p",null,"Now send a request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl http://127.0.0.1:9080/post -i -XPOST  -H \'Content-Type: application/json\' -d \'{\n  "messages": [\n    {\n      "role": "user",\n      "content": "<very profane message here>"\n    }\n  ]\n}\'\n')),(0,a.kt)("p",null,"Then the request will be blocked with error like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"HTTP/1.1 400 Bad Request\nDate: Thu, 03 Oct 2024 11:53:15 GMT\nContent-Type: text/plain; charset=utf-8\nTransfer-Encoding: chunked\nConnection: keep-alive\nServer: APISIX/3.10.0\n\nrequest body exceeds PROFANITY threshold\n")),(0,a.kt)("p",null,"Send a request with compliant content in the request body:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl http://127.0.0.1:9080/post -i -XPOST  -H \'Content-Type: application/json\' -d \'{\n  "messages": [\n    {\n      "role": "system",\n      "content": "You are a mathematician"\n    },\n    { "role": "user", "content": "What is 1+1?" }\n  ]\n}\'\n')),(0,a.kt)("p",null,"This request will be proxied normally to the configured LLM."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},'HTTP/1.1 200 OK\nDate: Thu, 03 Oct 2024 11:53:00 GMT\nContent-Type: text/plain; charset=utf-8\nTransfer-Encoding: chunked\nConnection: keep-alive\nServer: APISIX/3.10.0\n\n{"choices":[{"finish_reason":"stop","index":0,"message":{"content":"1+1 equals 2.","role":"assistant"}}],"created":1727956380,"id":"chatcmpl-AEEg8Pe5BAW5Sw3C1gdwXnuyulIkY","model":"gpt-4o-2024-05-13","object":"chat.completion","system_fingerprint":"fp_67802d9a6d","usage":{"completion_tokens":7,"prompt_tokens":23,"total_tokens":30}}\n')),(0,a.kt)("p",null,"You can also configure filters on other moderation categories like so:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes/1" -X PUT \\\n  -H "X-API-KEY: ${ADMIN_API_KEY}" \\\n  -d \'{\n    "uri": "/post",\n    "plugins": {\n      "ai-content-moderation": {\n        "provider": {\n          "aws_comprehend": {\n            "access_key_id": "\'"$ACCESS_KEY_ID"\'",\n            "secret_access_key": "\'"$SECRET_ACCESS_KEY"\'",\n            "region": "us-east-1"\n          }\n        },\n        "llm_provider": "openai",\n        "moderation_categories": {\n          "PROFANITY": 0.5,\n          "HARASSMENT_OR_ABUSE": 0.7,\n          "SEXUAL": 0.2\n        }\n      },\n      "ai-proxy": {\n        "auth": {\n          "header": {\n            "api-key": "\'"$OPENAI_KEY"\'"\n          }\n        },\n        "model": {\n          "provider": "openai",\n          "name": "gpt-4",\n          "options": {\n            "max_tokens": 512,\n            "temperature": 1.0\n          }\n        }\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org:80": 1\n      }\n    }\n  }\'\n')),(0,a.kt)("p",null,"If none of the ",(0,a.kt)("inlineCode",{parentName:"p"},"moderation_categories")," are configured, request bodies will be moderated on the basis of overall toxicity.\nThe default ",(0,a.kt)("inlineCode",{parentName:"p"},"moderation_threshold")," is 0.5, it can be configured like so."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes/1" -X PUT \\\n  -H "X-API-KEY: ${ADMIN_API_KEY}" \\\n  -d \'{\n  "uri": "/post",\n  "plugins": {\n    "ai-content-moderation": {\n      "provider": {\n        "aws_comprehend": {\n          "access_key_id": "\'"$ACCESS_KEY_ID"\'",\n          "secret_access_key": "\'"$SECRET_ACCESS_KEY"\'",\n          "region": "us-east-1"\n        }\n      },\n      "moderation_threshold": 0.7,\n      "llm_provider": "openai"\n    },\n    "ai-proxy": {\n      "auth": {\n        "header": {\n          "api-key": "\'"$OPENAI_KEY"\'"\n        }\n      },\n      "model": {\n        "provider": "openai",\n        "name": "gpt-4",\n        "options": {\n          "max_tokens": 512,\n          "temperature": 1.0\n        }\n      }\n    }\n  },\n  "upstream": {\n    "type": "roundrobin",\n    "nodes": {\n      "httpbin.org:80": 1\n    }\n  }\n}\'\n')))}d.isMDXComponent=!0}}]);